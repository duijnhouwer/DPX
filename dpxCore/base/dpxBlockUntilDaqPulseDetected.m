function detectTimeSeconds=dpxBlockUntilDaqPulseDetected(varargin)        % function that waits until a pulse is detected on the DAQ        p = inputParser;   % Create an instance of the inputParser class.    p.addParamValue('delaySeconds',1,@isnumeric);    p.addParamValue('resetCounter',false,@islogical);    p.addParamValue('maxWaitSeconds',Inf,@isnumeric);    p.parse(varargin{:});    %    delaySeconds=p.Results.delaySeconds;    maxWaitSeconds=p.Results.maxWaitSeconds;    %    daq=DaqDeviceIndex([],0); % Get Device-number    if isempty(daq)        daq=DaqDeviceIndex([],1); % Get Device-number        if isempty(daq)            error('No DAQ-unit detected. Is it connected?');        end    end    if p.Results.resetCounter    	DaqCInit(daq); % set pulse counter to zero    end    startCount=DaqCIn(daq);    startSecs=GetSecs;    while true        pulseCount=DaqCIn(daq);        if pulseCount-startCount==1            detectTimeSeconds=GetSecs;            break;        elseif pulseCount-startCount>1            % may also occur if the 32 counter on the DAQ goes through            % it's ceiling.            error('Missed the first pulse!?!? Try starting again ...');        elseif GetSecs-startSecs>maxWaitSeconds            detectTimeSeconds=-1;            disp(['maxWaitSeconds ( ' num2str(maxWaitSeconds) ') exceeded... detectTimeSeconds=' num2str(detectTimeSeconds)]);            break;                    else            ... keep waiting        end    end    if delaySeconds>0 && detectTimeSeconds>0        disp(['Pulse detected on DAQ,  waiting an additional ' num2str(delaySeconds*1000,'%d') ' ms ...']);        alreadyPassed=GetSecs-detectTimeSeconds;        WaitSecs(alreadyPassed-delaySeconds)    endend            